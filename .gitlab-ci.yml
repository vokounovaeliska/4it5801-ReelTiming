image: node:20.17.0

stages:
  - install
  - lint
  - test
  - build

variables:
  YARN_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/yarn'

.rules:
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
    - if: ($CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push")
    - if: ($CI_PIPELINE_SOURCE == "push")

install:
  stage: install
  interruptible: true
  rules:
    - !reference [.rules, rules]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: push
  script:
    - yarn install --frozen-lockfile

format:
  stage: lint
  interruptible: true
  rules:
    - !reference [.rules, rules]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: pull
  script:
    - yarn format:check

lint:
  stage: lint
  interruptible: true
  rules:
    - !reference [.rules, rules]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: pull
  script:
    - yarn lint

test-frontend:
  stage: test
  interruptible: true
  rules:
    - !reference [.rules, rules]
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: pull
  script:
    - yarn frontend test

build-frontend:
  stage: build
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
    - if: ($CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push")
    - if: ($CI_PIPELINE_SOURCE == "push")
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: pull
  script:
    - yarn frontend build

build-backend:
  stage: build
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
    - if: ($CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push")
    - if: ($CI_PIPELINE_SOURCE == "push")
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cache/yarn
      - node_modules
    policy: pull
  script:
    - yarn backend build
